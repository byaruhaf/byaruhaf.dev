<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Franklin Byaruhanga</title><description>A description of ByaruhafDev</description><link>https://byaruhaf.dev</link><language>en</language><lastBuildDate>Wed, 30 Nov 2022 07:32:33 +0300</lastBuildDate><pubDate>Wed, 30 Nov 2022 07:32:33 +0300</pubDate><ttl>250</ttl><atom:link href="https://byaruhaf.dev/feed.rss" rel="self" type="application/rss+xml"/><item><guid isPermaLink="true">https://byaruhaf.dev/posts/SPM_Multiplatform_App</guid><title>Adding a swift package to a Multiplatform App on Xcode 12</title><description>A description of my first post.</description><link>https://byaruhaf.dev/posts/SPM_Multiplatform_App</link><pubDate>Sun, 28 Nov 2021 15:28:00 +0300</pubDate><content:encoded><![CDATA[<h1>Adding a swift package to a Multiplatform App on Xcode 12</h1><p>Over the weekend i run in to this problem trying to add Swift Package to both targets of a Multiplatform app. Below I will demonstrate the problem and one solution to the issue.</p><p>Open Xcode 12 or newer and hit ⌘⇧N to create a new project. Navigate to the new “Multiplatform” section, select App, and press Next. Then save your project as usual.</p><img src="Screenshot%202020-11-24%20at%2000.22.26.png"/><p>Try to add a <a href="https://github.com/byaruhaf/package-name">swift package</a> to this app, you will need to select Target either iOS or macOS but not both. The Target selected will be the only one able to access the swift package.</p><img src="Screenshot%202020-11-24%20at%2000.23.49.png"/><p>Trying to add the swift package again to another target results in the error below.</p><img src="Screenshot%202020-11-24%20at%2000.23.13.png"/><p>The package can either be added to iOS or macOS but not both, this is where I got stuck.</p><p>One solution I found was to , Use the General pane of the project editor to specify the frameworks and libraries for the target I didn’t select when adding the swift package.<br><img src="Screenshot%202020-11-24%20at%2002.17.23.png"/></p><p>In my case I selected the macOS Target, then from the General pane. Under the Frameworks, Libraries and Embedded Content tap the plus + button, select the package and press Add.</p><img src="Screenshot%202020-11-24%20at%2002.15.16.png"/><p>The swift package can now be used by the macOS Target.</p><img src="Screenshot%202020-11-24%20at%2002.15.33.png"/><p>This workflow is not ideal in my opinion, so I summited a feedback with the Xcode Team.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://byaruhaf.dev/posts/Swift_Language_Version</guid><title>What is the “Swift Language Version” Xcode setting for?</title><description>A description of my first post.</description><link>https://byaruhaf.dev/posts/Swift_Language_Version</link><pubDate>Sat, 28 Nov 2020 15:28:00 +0300</pubDate><content:encoded><![CDATA[<h1>What is the “Swift Language Version” Xcode setting for?</h1><p>Prior to Swift 4, the version of the compiler and the language were one and the same. But since Swift 4, the compiler can run in a compatibility mode for previous Swift versions. check more info on <a href="https://swift.org/blog/swift-4-0-released/">compatibility modes</a> in the Swift 4.0 release notes. The Xcode build setting <code>SWIFT_VERSION</code> set's the compiler flag <code>-swift-version</code> which is the language mode. From the swift compiler print out below this parameter only changes how the input is interpreted.</p><blockquote><p>-swift-version &lt;vers&gt; Interpret input according to a specific Swift language version number</p></blockquote><p>Thus When you select Swift Language Version to 4.2, this does not mean use Swift 4.2 compiler. The compiler version will still be 5.1.3, the Swift Language Version setting instructs the compiler to run in Swift 4.2 compatibility mode. The compatibility mode means you may not need to modify your swift 4.2 code to use the new version of the compiler. Because the compiler running in compatibility mode allows Swift version 4.2 code to compile and run alongside code from version 5 and later.</p><img src="https://i.stack.imgur.com/r5Ofc.jpg"/><p>The Swift 5 compiler with compatibility mode can compile code written with either <strong><em>Swift 4 syntax</em></strong>, <strong>Swift 4.2 syntax</strong>, or <strong>Swift 5 syntax</strong>.</p><p>Here is a code example, create a file test.swift with code below:</p><pre><code class="language-swift">//code written before siwft 5
let firstName = "michael jackson"
let offset = firstName.endIndex.encodedOffset

// Check swift version being used.
#if swift(&gt;=5.2)
print("Hello, Swift 5.2")

#elseif swift(&gt;=5.1)
print("Hello, Swift 5.1")

#elseif swift(&gt;=5.0)
print("Hello, Swift 5.0")

#elseif swift(&gt;=4.2)
print("Hello, Swift 4.2")

#elseif swift(&gt;=4.1)
print("Hello, Swift 4.1")

#elseif swift(&gt;=4.0)
print("Hello, Swift 4.0")

#endif
</code></pre><p>suppose the above code was written before swift 5 using the swift 4 compiler this code will compile with no error's as shown below.</p><img src="https://i.stack.imgur.com/JMzuV.jpg"/><p>After swift 5 is released if you try to compile this code with Swift 5 compiler as shown below.</p><img src="https://i.stack.imgur.com/9fnOm.jpg"/><p>You will get the warning shown above since <code>encodedOffset</code> is deprecated in swift 5. You could downgrade and use the swift 4 compiler or you can use the Swift 5 compiler in compatibility mode with the compiler flag -swift-version as shown below.</p><img src="https://i.stack.imgur.com/IU9nI.jpg"/><p>It's important to note that <strong>Swift 4 compiler</strong>, and the <strong>Swift 5 compiler in Swift-4 compatibility mode</strong> are not the same thing. New swift 5 language features are normally available to the swift 5 compiler running compatibility mode. This allows developers to use the new features even when they can't upgrade to swift 5. The new Swift 5 features will not be available to the <strong>Swift 4 compiler</strong>.</p>]]></content:encoded></item></channel></rss>